/*
 * This idl file is generated by the ORB Plugin
 */
module repositorio {
	// Forward reference para poder usar IRepositorio antes de declararla
	interface IRepositorio;
	
	// Lista de nombres de los repositorios subordinados
	typedef sequence<string> StringSeq;
	typedef sequence<IRepositorio> IRepositorioSeq;
	
	struct ArchivoDetalles {
		string nombre;
		string archivo;
		string directorio;
		StringSeq palabrasClave;
		string comentario;
	};
	
	struct Coincidencia {
		string nombreRepositorio;
		IRepositorio repositorio;
		string nombre;
		string archivo;
		StringSeq palabrasClave;
		string comentario;
	};
	
	typedef sequence<Coincidencia> Resultados;
	typedef sequence<octet> Bytes;

	interface IRepositorio {
		///////////////////////////////////
		// Constantes
		///////////////////////////////////
		const string CLAVE = "myself.repo";
		const string CLASE = "repositorio.IRepositorio";

		///////////////////////////////////
		// Atributos
		///////////////////////////////////
		attribute IRepositorio padre;
		readonly attribute IRepositorioSeq subordinados;
		attribute string nombre;
		
		///////////////////////////////////
		// Operaciones
		///////////////////////////////////
		
		// TODO Búsqueda por palabras clave
		Resultados buscar(in string palabraClave);
		
		// TODO Recuperar documentos
		void iniciarDescarga(in string nombre);
		Bytes solicitarBloque(in string nombre);

		// Solo LOCAL
		// Buscar en todos los repositorios
		// void buscarTodo(in string palabraClave);
				
		// Solo LOCAL
		// Añadir informacion en el índice
		// void registrar(in string ruta);
		
		// Registrar repositorios subordinados
		string registrar(in IRepositorio referencia);
		string registrarConNombre(in IRepositorio referencia, in string nombre);

		// Dar de baja un repositorio
		void baja(in string nombre);
		
		
	};
};
